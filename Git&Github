1. Git基本操作

1.1 查看状态
git status
查看暂存区、工作区状态

1.2 添加操作
git add [filename]
将工作区的“新增/修改”添加到暂存区

1.3 提交操作
git commit -m "commit message" [filename]
将暂存区的内容提交到本地库

1.4 查看历史记录
git log显示详细日志
commit 895ddba9da7d512855263887e5a60c8915612d51 (HEAD -> master)
Author: zhangfl_pro <zfl_happy_pro@qq.com>
Date:   Tue Dec 29 09:00:41 2020 +0800

    insert yuan

commit 5c41c90f600bf37aaf1289c0da33045a2faba7e4
Author: zhangfl_pro <zfl_happy_pro@qq.com>
Date:   Tue Dec 29 08:59:55 2020 +0800

    insert qing

(多屏显示控制方式:空格向下翻页；b向上翻页；q退出)

git log --pretty=oneline 每个日志显示单行(哈希值，指针位置，日志内容)
9208129057ebe90ed2bba282c72448e2582707b8 (HEAD -> master) for test history
20941907a931c84fbc22102fde83f4417d311cec My second commit, modify good.txt
6b8d0c9c5087f8e0c875885abd41bfe2730bdc68 My first commit new file good.txt


git log --oneline 每个日志显示单行(部分哈希值，指针位置，日志内容)
9208129 (HEAD -> master) for test history
2094190 My second commit, modify good.txt
6b8d0c9 My first commit new file good.txt


git reflog 每个日志显示单行(部分哈希值，指针位置，HEAD@{移动到当前版本需要多少步}，日志内容)
9208129 (HEAD -> master) HEAD@{0}: reset: moving to 9208129
90742d8 HEAD@{1}: commit: insert song
895ddba HEAD@{2}: commit: insert yuan
5c41c90 HEAD@{3}: commit: insert qing


1.5 前进后退
1.5.1 基于索引值操作【推荐】
git reset --hard [部分哈希值]: git reset --hard 5c41c90
1.5.2 使用^符号: 只能后退
git reset --hard HEAD^ : 一个^代表后退一步，几个^代表后退几步
git reset --hard HEAD^^^^: 后退4步
1.5.3 使用~符号: 只能后退
git reset --hard HEAD~4: 表示后退4步
git reset --hard HEAD~n: 表示后退n步

1.6 reset命令的三个参数对比
--soft参数
仅仅本地库移动HEAD指针

--mixed参数
在本地库移动HEAD指针
重置暂存区

--hard参数
在本地库移动HEAD指针
重置暂存区
重置工作区

1.7 删除文件并找回
前提: 删除前，文件存在时的状态提交到本地库。
操作: git reset --hard [指针位置]
删除操作已经提交到本地库: 指针位置指向历史记录
删除操作尚未提交到本地库: 指针位置使用HEAD

2. 分支操作

创建分支
git branch [分支名]
查看分支
git branch -v
切换分支
git checkout [分支名]

